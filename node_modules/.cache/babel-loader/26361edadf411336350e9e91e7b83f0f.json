{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\CAGRI\\\\Desktop\\\\RickAndMorty\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\CAGRI\\\\Desktop\\\\RickAndMorty\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\CAGRI\\\\Desktop\\\\RickAndMorty\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\CAGRI\\\\Desktop\\\\RickAndMorty\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\CAGRI\\\\Desktop\\\\RickAndMorty\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\CAGRI\\\\Desktop\\\\RickAndMorty\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\CAGRI\\\\Desktop\\\\RickAndMorty\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\CAGRI\\\\Desktop\\\\RickAndMorty\\\\my-app\\\\src\\\\components\\\\DetailsOfChar.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Card, CardMedia, CardTitle, CardText } from \"material-ui/Card\";\nimport { connect } from \"react-redux\";\n\nvar DetailsOfChar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DetailsOfChar, _Component);\n\n  function DetailsOfChar(props) {\n    var _this;\n\n    _classCallCheck(this, DetailsOfChar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailsOfChar).call(this, props));\n    _this.state = {\n      epsiodeName: []\n    };\n    _this.getEpsiode = _this.getEpsiode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getFormattedEpisodeName = _this.getFormattedEpisodeName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DetailsOfChar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getEpsiode();\n    }\n  }, {\n    key: \"getEpsiode\",\n    value: function getEpsiode() {\n      var _this2 = this;\n\n      var epsiode = this.props.detailsOfChar.episode;\n\n      for (var y = epsiode.length - 1; y > epsiode.length - 6; y--) {\n        if (epsiode[y] !== undefined) {\n          fetch(epsiode[y]).then(function (res) {\n            return res.json();\n          }).then(function (result) {\n            _this2.setState(function (prevState) {\n              return {\n                epsiodeName: [].concat(_toConsumableArray(prevState.epsiodeName), _toConsumableArray(result.name + \",\"))\n              };\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"getFormattedEpisodeName\",\n    value: function getFormattedEpisodeName(episodeName) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Detail-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 400,\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        overlay: React.createElement(CardTitle, {\n          title: this.props.detailsOfChar.name,\n          subtitle: this.props.detailsOfChar.origin.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.detailsOfChar.image,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(CardText, {\n        style: {\n          backgroundColor: \"#282c34\",\n          color: \"#ffffff\",\n          fontSize: 20,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.epsiodeName)));\n    }\n  }]);\n\n  return DetailsOfChar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    detailsOfChar: state.charDetails.detailsOfChar\n  };\n};\n\nDetailsOfChar = connect(mapStateToProps)(DetailsOfChar);\nexport default DetailsOfChar;","map":{"version":3,"sources":["C:\\Users\\CAGRI\\Desktop\\RickAndMorty\\my-app\\src\\components\\DetailsOfChar.js"],"names":["React","Component","Card","CardMedia","CardTitle","CardText","connect","DetailsOfChar","props","state","epsiodeName","getEpsiode","bind","getFormattedEpisodeName","epsiode","detailsOfChar","episode","y","length","undefined","fetch","then","res","json","result","setState","prevState","name","episodeName","width","height","origin","image","backgroundColor","color","fontSize","textAlign","mapStateToProps","ownProps","charDetails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Card, CardMedia, CardTitle, CardText } from \"material-ui/Card\";\nimport { connect } from \"react-redux\";\n\nclass DetailsOfChar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { epsiodeName: [] };\n    this.getEpsiode = this.getEpsiode.bind(this);\n    this.getFormattedEpisodeName = this.getFormattedEpisodeName.bind(this);\n  }\n\n  componentDidMount() {\n    this.getEpsiode();\n  }\n\n  getEpsiode() {\n    let epsiode = this.props.detailsOfChar.episode;\n    for (let y = epsiode.length - 1; y > epsiode.length - 6; y--) {\n      if (epsiode[y] !== undefined) {\n        fetch(epsiode[y])\n          .then(res => res.json())\n          .then(result => {\n            this.setState(prevState => {\n              return {\n                epsiodeName: [...prevState.epsiodeName, ...(result.name + \",\")]\n              };\n            });\n          });\n      }\n    }\n  }\n\n  getFormattedEpisodeName(episodeName) {}\n\n  render() {\n    return (\n      <div className=\"Detail-header\">\n        <Card style={{ width: 400, height: 400 }}>\n          <CardMedia\n            overlay={\n              <CardTitle\n                title={this.props.detailsOfChar.name}\n                subtitle={this.props.detailsOfChar.origin.name}\n              />\n            }\n          >\n            <img src={this.props.detailsOfChar.image} alt=\"\" />\n          </CardMedia>\n          <CardText\n            style={{\n              backgroundColor: \"#282c34\",\n              color: \"#ffffff\",\n              fontSize: 20,\n              textAlign: \"center\"\n            }}\n          >\n            {this.state.epsiodeName}\n          </CardText>\n        </Card>\n        {/* <img src={this.props.detailsOfChar.image} />\n        <p>{this.props.detailsOfChar.name}</p>\n        <p>{this.props.detailsOfChar.origin.name}</p>\n        <p>{this.state.epsiodeName}</p> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  detailsOfChar: state.charDetails.detailsOfChar\n});\n\nDetailsOfChar = connect(mapStateToProps)(DetailsOfChar);\nexport default DetailsOfChar;\n"]},"metadata":{},"sourceType":"module"}